{"version":3,"sources":["webpack:///./src/pages/projects.js"],"names":["FeatureList","styled","div","Feature","FeatureImg","props","reverse","FeatureTxt","FeatureItem","style","width","fluid","img","hdr","txt","data","textAlign","maxWidth","margin","lock","childImageSharp","to","world","laptop","brush","query"],"mappings":"ykCAMA,IAAMA,EAAcC,IAAOC,IAAV,KAMXC,EAAUF,IAAOC,IAAV,KAaPE,EAAaH,IAAOC,IAAV,KAOH,SAAAG,GAAK,OAAKA,EAAMC,QAAU,EAAI,KAIrCC,EAAaN,IAAOC,IAAV,KAQH,SAAAG,GAAK,OAAKA,EAAMC,QAAU,EAAI,KACzB,SAAAD,GAAK,OAAKA,EAAMC,QAAU,QAAU,UAIhDE,EAAc,SAAAH,GAClB,OAAOA,EAAMC,QACX,kBAACH,EAAD,CAASG,SAAO,GACd,kBAACF,EAAD,CAAYE,SAAO,GACjB,kBAAC,IAAD,CAAKG,MAAO,CAAEC,MAAM,QAAWC,MAAON,EAAMO,OAE9C,kBAACL,EAAD,CAAYD,SAAO,GACjB,4BAAKD,EAAMQ,KACX,2BAAIR,EAAMS,OAId,kBAACX,EAAD,KACE,kBAACC,EAAD,KACE,kBAAC,IAAD,CAAKK,MAAO,CAAEC,MAAM,QAAWC,MAAON,EAAMO,OAE9C,kBAACL,EAAD,KACE,4BAAKF,EAAMQ,KACX,2BAAIR,EAAMS,QAMH,0BAAGC,EAAH,EAAGA,KAAH,OACb,kBAAC,IAAD,KACE,wBAAIN,MAAO,CAAEO,UAAU,WAAvB,YACA,iHACA,yBAAKP,MAAO,CAAEQ,SAAS,QAAUC,OAAO,SACtC,kBAAClB,EAAD,KACE,kBAACG,EAAD,KACE,kBAACC,EAAD,KACE,kBAAC,IAAD,CAAKK,MAAO,CAAEC,MAAM,QAAWC,MAAOI,EAAKI,KAAKC,gBAAgBT,SAElE,kBAACJ,EAAD,KACE,oDACA,2EAAgD,kBAAC,OAAD,CAAMc,GAAI,YAAV,uBAAhD,OAGJ,kBAACb,EAAD,CACEF,SAAS,EACTM,IAAKG,EAAKO,MAAMF,gBAAgBT,MAChCE,IAAK,WACLC,IAAK,+DAEP,kBAACN,EAAD,CACEF,SAAS,EACTM,IAAKG,EAAKQ,OAAOH,gBAAgBT,MACjCE,IAAK,YACLC,IAAK,wGAEP,kBAACN,EAAD,CACEF,SAAS,EACTM,IAAKG,EAAKS,MAAMJ,gBAAgBT,MAChCE,IAAK,iBACLC,IAAK,2EAQR,IAAMW,EAAK","file":"component---src-pages-projects-js-af4adcbec6d47698519e.js","sourcesContent":["import React from \"react\"\r\nimport Layout from \"../components/layout\"\r\nimport Img from \"gatsby-image\"\r\nimport { graphql, Link } from \"gatsby\"\r\nimport styled from \"styled-components\"\r\n\r\nconst FeatureList = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-flow: column nowrap;\r\n`\r\n\r\nconst Feature = styled.div`\r\n  margin-top: 2rem;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-content: center;\r\n  align-items: center;\r\n  flex-flow: column wrap;\r\n  \r\n  @media (min-width: 50em) {\r\n    flex-flow: row nowrap;\r\n  }\r\n`\r\n\r\nconst FeatureImg = styled.div`\r\n  display: inline-block;\r\n  width: 60%;\r\n  order: 1;\r\n  \r\n  @media (min-width: 50em) {\r\n    width: 30%;\r\n    order: ${props => (props.reverse ? 2 : 1)};\r\n  }\r\n`\r\n\r\nconst FeatureTxt = styled.div`\r\n  display: inline-block;\r\n  width: 100%;\r\n  order: 2;\r\n  text-align: center;\r\n  \r\n  @media (min-width: 50em) {\r\n    width: 60%;\r\n    order: ${props => (props.reverse ? 1 : 2)};\r\n    text-align: ${props => (props.reverse ? \"right\" : \"left\")};;\r\n  }\r\n`\r\n\r\nconst FeatureItem = props => {\r\n  return props.reverse ? (\r\n    <Feature reverse>\r\n      <FeatureImg reverse>\r\n        <Img style={{ width: `100%` }} fluid={props.img}/>\r\n      </FeatureImg>\r\n      <FeatureTxt reverse>\r\n        <h5>{props.hdr}</h5>\r\n        <p>{props.txt}</p>\r\n      </FeatureTxt>\r\n    </Feature>\r\n  ) : (\r\n    <Feature>\r\n      <FeatureImg>\r\n        <Img style={{ width: `100%` }} fluid={props.img}/>\r\n      </FeatureImg>\r\n      <FeatureTxt>\r\n        <h5>{props.hdr}</h5>\r\n        <p>{props.txt}</p>\r\n      </FeatureTxt>\r\n    </Feature>\r\n  )\r\n}\r\n\r\nexport default ({ data }) => (\r\n  <Layout>\r\n    <h1 style={{ textAlign: `center` }}>Projects</h1>\r\n    <p>These are some of the projects I have worked on, and the technologies I have used:</p>\r\n    <div style={{ maxWidth: `32rem`, margin: `auto` }}>\r\n      <FeatureList>\r\n        <Feature>\r\n          <FeatureImg>\r\n            <Img style={{ width: `100%` }} fluid={data.lock.childImageSharp.fluid}/>\r\n          </FeatureImg>\r\n          <FeatureTxt>\r\n            <h5>Web Cryptography API</h5>\r\n            <p>Client-side in-browser cryptography project. <Link to={\"/crypto/\"}>You can try it here</Link>.</p>\r\n          </FeatureTxt>\r\n        </Feature>\r\n        <FeatureItem\r\n          reverse={true}\r\n          img={data.world.childImageSharp.fluid}\r\n          hdr={\"Web Apps\"}\r\n          txt={\"Dynamic web app development with JAM-Stack and MEAN-Stack.\"}\r\n        />\r\n        <FeatureItem\r\n          reverse={false}\r\n          img={data.laptop.childImageSharp.fluid}\r\n          hdr={\"Languages\"}\r\n          txt={\"Major projects with JavaScript, Python and Java. Experience with C/C++, R and MatLab, among others.\"}\r\n        />\r\n        <FeatureItem\r\n          reverse={true}\r\n          img={data.brush.childImageSharp.fluid}\r\n          hdr={\"Graphic Design\"}\r\n          txt={\"Skilled with Adobe Photoshop and Adobe Illustrator Creative Cloud.\"}\r\n        />\r\n      </FeatureList>\r\n    </div>\r\n  </Layout>\r\n)\r\n\r\n\r\nexport const query = graphql`\r\n  query {\r\n    brush: file(relativePath: { eq: \"brush.jpg\" }) {\r\n      childImageSharp {\r\n        fluid(maxWidth: 300, quality: 100) {\r\n          ...GatsbyImageSharpFluid_noBase64\r\n        }\r\n      }\r\n    },\r\n    laptop: file(relativePath: { eq: \"laptop.jpg\" }) {\r\n      childImageSharp {\r\n        fluid(maxWidth: 300, quality: 100) {\r\n          ...GatsbyImageSharpFluid_noBase64\r\n        }\r\n      }\r\n    },\r\n    lock: file(relativePath: { eq: \"lock.jpg\" }) {\r\n      childImageSharp {\r\n        fluid(maxWidth: 300, quality: 100) {\r\n          ...GatsbyImageSharpFluid_noBase64\r\n        }\r\n      }\r\n    },\r\n    world: file(relativePath: { eq: \"world.jpg\" }) {\r\n      childImageSharp {\r\n        fluid(maxWidth: 300, quality: 100) {\r\n          ...GatsbyImageSharpFluid_noBase64\r\n        }\r\n      }\r\n    }\r\n  }\r\n`"],"sourceRoot":""}