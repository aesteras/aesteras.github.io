{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["data","style","zIndex","maxHeight","fluid","vegas","childImageSharp","textAlign","query"],"mappings":"2FAAA,uGAKe,0BAAGA,EAAH,EAAGA,KAAH,OACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAO,CAAEC,QAAS,EAAGC,UAAU,SAAYC,MAAOJ,EAAKK,MAAMC,gBAAgBF,QAClF,wBAAIH,MAAO,CAAEM,UAAU,WAAvB,gBACA,8DACA,mHACA,8CACA,4OAEA,8JAEA,6CACA,2IACA,6NAEA,0CACA,gGACA,+IAKG,IAAMC,EAAK","file":"component---src-pages-index-js-4eab6c5116ac2c0764fe.js","sourcesContent":["import React from \"react\"\r\nimport Layout from \"../components/layout\"\r\nimport { graphql } from \"gatsby\"\r\nimport Img from \"gatsby-image\"\r\n\r\nexport default ({ data }) => (\r\n  <Layout>\r\n    <Img style={{ zIndex: -1, maxHeight: `16rem` }} fluid={data.vegas.childImageSharp.fluid}/>\r\n    <h1 style={{ textAlign: `center` }}>Hello There!</h1>\r\n    <p>Welcome to my personal website!</p>\r\n    <p>This is the place where I try and play with all the crazy stuff that I come up with.</p>\r\n    <h3>Previous state</h3>\r\n    <p>The previous version of this website consisted of a \"framework-less\" custom implementation of a responsive\r\n      single-page application that used the Fetch API to get content and the History API for navigation.</p>\r\n    <p>I followed that approach to understand better how it all worked, but it was a hell to maintain and I don't\r\n      recommend it at all.</p>\r\n    <h3>Current state</h3>\r\n    <p>Right now, this website is a mostly direct port of the old one, but generated with Gatsby, which uses React.</p>\r\n    <p>After trying it out, I highly recommend it to anyone interested in building a simple personal website, although\r\n      any static site generator should work just fine depending on your preferences.</p>\r\n    <h3>Next state</h3>\r\n    <p>For now, I just wanted to replace the old site with this new one.</p>\r\n    <p>However, as it is now easier to develop new features, I have a couple of ideas that I might try in the\r\n      future.</p>\r\n  </Layout>\r\n)\r\n\r\nexport const query = graphql`\r\n  query {\r\n    vegas: file(relativePath: { eq: \"photo-vegas.jpg\" }) {\r\n      childImageSharp {\r\n        fluid(maxWidth: 2000, quality: 100) {\r\n          ...GatsbyImageSharpFluid_noBase64\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}