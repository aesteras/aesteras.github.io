{"version":3,"sources":["webpack:///./src/pages/crypto.js"],"names":["UTF8","d","TextEncoder","encode","e","TextDecoder","decode","encrypt","workerEncrypt","Worker","dataObject","decryptedMessage","document","getElementById","value","passwordAsBytes","prompt","postMessage","buffer","onmessage","event","data","encryptedMessage","decrypt","workerDecrypt","TextField","styled","textarea","style","textAlign","id","placeholder","maxWidth","margin","display","flexFlow","justifyContent","cursor","onClick"],"mappings":"+bAIA,IAAMA,EACI,SAAAC,GAAC,OAAI,IAAIC,aAAcC,OAAOF,IADlCD,EAEI,SAAAI,GAAC,OAAI,IAAIC,YAAY,SAASC,OAAOF,IAGzCG,EAAU,WACd,IAAIC,EAAgB,IAAIC,OAAO,sBAC3BC,EAAa,CACfC,iBAAkBX,EAAYY,SAASC,eAAe,aAAaC,OACnEC,gBAAiBf,EAAYgB,OAAO,0BAEtCR,EAAcS,YAAYP,EAAY,CAACA,EAAWC,iBAAiBO,SACnEV,EAAcW,UAAY,SAAAC,GACxBR,SAASC,eAAe,aAAaC,MAAQd,EAAYoB,EAAMC,KAAKC,kBACpEV,SAASC,eAAe,aAAaC,MAAQ,KAI3CS,EAAU,WACd,IAAIC,EAAgB,IAAIf,OAAO,sBAC3BC,EAAa,CACfY,iBAAkBtB,EAAYY,SAASC,eAAe,aAAaC,OACnEC,gBAAiBf,EAAYgB,OAAO,0BAEtCQ,EAAcP,YAAYP,EAAY,CAACA,EAAWY,iBAAiBJ,SACnEM,EAAcL,UAAY,SAAAC,GACxBR,SAASC,eAAe,aAAaC,MAAQd,EAAYoB,EAAMC,KAAKV,kBACpEC,SAASC,eAAe,aAAaC,MAAQ,KAI3CW,EAAYC,IAAOC,SAAV,KAWA,4BACb,kBAAC,IAAD,KACE,wBAAIC,MAAO,CAAEC,UAAU,WAAvB,6BACA,iLAEA,qCACA,kHACA,kBAACJ,EAAD,CAAWK,GAAG,YAAYC,YAAY,eACtC,yBAAKH,MAAO,CACVI,SAAS,QACTC,OAAO,OACPC,QAAQ,OACRC,SAAS,aACTC,eAAe,iBAEf,uBAAGR,MAAO,CAAES,OAAO,WAAcP,GAAG,gBAAgBQ,QAAS/B,GAA7D,WACA,uBAAGqB,MAAO,CAAES,OAAO,WAAcP,GAAG,gBAAgBQ,QAASf,GAA7D,YAEF,kBAACE,EAAD,CAAWK,GAAG,YAAYC,YAAY","file":"component---src-pages-crypto-js-f25e8076eb9fc2115104.js","sourcesContent":["import React from \"react\"\r\nimport Layout from \"../components/layout\"\r\nimport styled from \"styled-components\"\r\n\r\nconst UTF8 = {\r\n  encode: d => new TextEncoder().encode(d),\r\n  decode: e => new TextDecoder(\"utf-8\").decode(e)\r\n};\r\n\r\nconst encrypt = () => {\r\n  let workerEncrypt = new Worker(\"/worker-encrypt.js\");\r\n  let dataObject = {\r\n    decryptedMessage: UTF8.encode(document.getElementById(\"decrypted\").value),\r\n    passwordAsBytes: UTF8.encode(prompt(\"Enter your password:\"))\r\n  };\r\n  workerEncrypt.postMessage(dataObject, [dataObject.decryptedMessage.buffer]);\r\n  workerEncrypt.onmessage = event => {\r\n    document.getElementById(\"encrypted\").value = UTF8.decode(event.data.encryptedMessage);\r\n    document.getElementById(\"decrypted\").value = \"\";\r\n  };\r\n};\r\n\r\nconst decrypt = () => {\r\n  let workerDecrypt = new Worker(\"/worker-decrypt.js\");\r\n  let dataObject = {\r\n    encryptedMessage: UTF8.encode(document.getElementById(\"encrypted\").value),\r\n    passwordAsBytes: UTF8.encode(prompt(\"Enter your password:\"))\r\n  };\r\n  workerDecrypt.postMessage(dataObject, [dataObject.encryptedMessage.buffer]);\r\n  workerDecrypt.onmessage = event => {\r\n    document.getElementById(\"decrypted\").value = UTF8.decode(event.data.decryptedMessage);\r\n    document.getElementById(\"encrypted\").value = \"\";\r\n  };\r\n};\r\n\r\nconst TextField = styled.textarea`\r\n  width: 100%;\r\n  height: 10rem;\r\n  resize: none;\r\n  border: 1px solid #111111;\r\n  border-radius: 5px;\r\n  padding: 5px;\r\n  margin: 1rem 0;\r\n  font-family: 'Courier New', Courier, monospace;\r\n`\r\n\r\nexport default () => (\r\n  <Layout>\r\n    <h1 style={{ textAlign: `center` }}>Web Cryptography API Demo</h1>\r\n    <p>Here you can try my implementation of client-side in-browser encryption using only the Web Cryptography API along\r\n      with web workers for efficiency.</p>\r\n    <h3>Usage</h3>\r\n    <p>Type your text in the text area below and click the buttons to encrypt and decrypt.</p>\r\n    <TextField id=\"decrypted\" placeholder=\"plain text\"/>\r\n    <div style={{\r\n      maxWidth: `20rem`,\r\n      margin: `auto`,\r\n      display: `flex`,\r\n      flexFlow: `row nowrap`,\r\n      justifyContent: `space-around`\r\n    }}>\r\n      <a style={{ cursor: `pointer` }} id=\"buttonEncrypt\" onClick={encrypt}>Encrypt</a>\r\n      <a style={{ cursor: `pointer` }} id=\"buttonDecrypt\" onClick={decrypt}>Decrypt</a>\r\n    </div>\r\n    <TextField id=\"encrypted\" placeholder=\"encrypted text\"/>\r\n  </Layout>\r\n)\r\n"],"sourceRoot":""}